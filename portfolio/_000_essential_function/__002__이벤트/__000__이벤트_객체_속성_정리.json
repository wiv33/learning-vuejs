{
  "function(e)": {
    "e": {
      "[relation-common]": {
        "target": "이벤트가 발생한 HTML 요소를 반환",
        "currentTarget": "이벤트 리스너가 이벤트를 발생시키는 HTML 요소를 반환",
        "bubbles": "현재의 이벤트가 버블링을 일으키는 이벤트인지 여부를 반환",
        "cancelable": "기본 이벤트를 방지할 수 있는지 여부를 반환",
        "defaultPrevented": "기본 이벤트가 방지되었는지 여부",
        "eventPhase": {
          "이벤트 흐름의 단계를 표시": {
            "포착": "CAPTURING_PHASE",
            "이벤트 발생": "AT_TARGET",
            "버블링": "BUBBLING_PHASE"
          }
        },
        "srcElement": "IE에서 사용되던 속성으로 target과 동일한 속성"
      },
      "[relation-keyboard]": {
        "altKey": "ALT 키가 눌러졌는지 여부-bool",
        "shiftKey": "SHIFT 키가 눌러졌는지 여부",
        "ctrlKey": "CTRL 키가 눌러졌는지 여부",
        "metaKey": {
          "메타 키 여부": {
            "윈도우": "window key",
            "Mac": "command key"
          }
        },
        "key": "이벤트에 의해 나타나는 키의 값을 반환 - 대소문자 구분",
        "code": {
          "설명": "이벤트를 발생시킨 키의 코드값을 반환",
          "예시": ["a 입력 -> 'KeyA'", "Shift 입력 -> 'Shift'"]
        },
        "[deprecated]": {
          "keyCode": "입력된 키 코드 반환 - 대소문자 구분하지 않음",
          "charCode": "keypress 이벤트 발생 시 Unicode 반환 - 대소문자 구분, 한글 반응 x"
        },
        "location": "디바이스에서의 키 위칫값, 키보드로 확인 불가(모두 0)"
      },
      "[relation-mouse]": {
        "button": {
          "이벤트를 발생시킨 마우스 버튼": {
            0: "왼쪽 버튼",
            1: "휠",
            2: "오른쪽 버튼"
          }
        },
        "buttons": {
          "마우스 이벤트가 발생한 후 눌러져 있는 마우스 버튼의 값을 반환": {
            1: "왼쪽",
            2: "오른쪽",
            4: "휠",
            8: "네 번째 버튼",
            16: "다섯 번째 버튼",
            "조합": "왼쪽[1], 오른쪽[2], 휠[4]을 누르면 7을 반환"
          }
        },
        "(clientX, clientY)": "마우스 이벤트가 일어났을 때 뷰포트(ViewPort) 영역상의 좌표, 스크롤바 영향 받지 않음",
        "(layerX, layerY)": "마우스 이벤트가 발생한 HTML 요소 영역상에서의 좌표(IE 제외)",
        "(offsetX, offsetY)": "마우스 이벤트가 발생한 HTML 요소 영역상에서의 좌표(IE 사용)",
        "(pageX, pageY)": "마우스 이벤트가 일어났을 때의 HTML Document 영역상의 좌표",
        "(screenX, screenY)": "마우스 이벤트가 일어났을 때의 모니터 화면(screen) 영역상의 좌표"
      },
      "[relation-methods]": {
        "preventDefault()": "기본 이벤트의 자동 실행을 중지시킴",
        "stopPropagation()": "이벤트의 전파를 막음"
      }
    }
  }
}
